name: Build v2rayA feed

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build:
    name: Build packages for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        include:
          - arch: aarch64_cortex-a53
            runtime_test: false
      

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build
        uses: immortalwrt/gh-action-sdk@v6
        env:
          ARCH: ${{ matrix.arch }}-openwrt-24.10
          FEEDNAME: v2raya_ci
          PACKAGES: ca-certificates v2fly-geodata v2ray-core xray-core v2raya luci-app-v2raya
          NO_REFRESH_CHECK: 1
          INDEX: 1
          KEY_BUILD: ${{ secrets.USIGN_KEY }}
          V: s

      - name: Upload feed
        uses: Pendect/action-rsyncer@9738db02560c333bf629a1533bd86ceda138e599
        with:
          flags: '-ahvHP'
          options: '--delete'
          src: 'bin/packages/${{ matrix.arch }}/v2raya_ci/'
          dest: '${{ secrets.SF_USER }}@frs.sourceforge.net:/home/frs/project/v2raya/openwrt/${{ matrix.arch }}/'
        env:
          DEPLOY_KEY: ${{ secrets.SF_KEY }}

      - name: Move created packages to project dir
        run: cp bin/packages/${{ matrix.arch }}/v2raya_ci/* . || true

      - name: Store packages
        uses: actions/upload-artifact@v4
        if: github.event_name != 'release'
        with:
          name: ${{ matrix.arch }}-${{ github.sha }}-packages
          path: |
            Packages
            Packages.*
            *.ipk

      - name: Store logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-${{ github.sha }}-logs
          path: logs/

      - name: Remove logs
        run: sudo rm -rf logs/ || true

      - name: Register QEMU
        if: ${{ matrix.runtime_test }}
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support
          sudo update-binfmts --import

      - name: Build Docker container
        if: ${{ matrix.runtime_test }}
        run: |
          docker build --platform linux/${{ matrix.arch }} -t test-container --build-arg ARCH .github/workflows/
        env:
          ARCH: ${{ matrix.arch }}-openwrt-24.10

      - name: Test via Docker container
        if: ${{ matrix.runtime_test }}
        run: |
          docker run --platform linux/${{ matrix.arch }} --rm -v $GITHUB_WORKSPACE:/ci test-container
